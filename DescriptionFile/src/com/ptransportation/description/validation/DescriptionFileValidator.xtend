/*
 * generated by Xtext 2.9.1
 */
package com.ptransportation.description.validation

import com.ptransportation.description.descriptionFile.Cluster
import com.ptransportation.description.descriptionFile.DescriptionFilePackage
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class DescriptionFileValidator extends AbstractDescriptionFileValidator {

	public static val LIN_VERSIONS = #['1.0','1.1','1.2', '1.3','2.0','2.1','2.2'];
	
	@Check
	def checkThatTheClusterProtocalVersionIsAValidLINVersion(Cluster cluster) {
		if(!LIN_VERSIONS.contains(cluster.protocolVersion)) {
			error('''Invalid LIN protocol version "«cluster.protocolVersion»".''',cluster,
				DescriptionFilePackage.Literals.CLUSTER__PROTOCOL_VERSION
			);
		}
		if(!cluster.protocolVersion.equals('2.2')) {
			warning('''Currently only LIN protocol version "2.2" is supported.''',cluster,
				DescriptionFilePackage.Literals.CLUSTER__PROTOCOL_VERSION
			);
		}
	}
	
	@Check
	def checkThatTheLanguageVersionIsAValidLINVersion(Cluster cluster) {
		if(!LIN_VERSIONS.contains(cluster.languageVersion)) {
			error('''Invalid LIN language version "«cluster.languageVersion»".''',cluster,
				DescriptionFilePackage.Literals.CLUSTER__LANGUAGE_VERSION
			);
		}
		if(!cluster.languageVersion.equals('2.2')) {
			warning('''Currently only LIN language version "2.2" is supported.''',cluster,
				DescriptionFilePackage.Literals.CLUSTER__LANGUAGE_VERSION
			);
		}
	}
	
	// TODO add checks for time base
	// TODO add checks for jitter.
	
	// TODO add the rest of the checks.
	
	 
	
//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					DescriptionFilePackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	
}
